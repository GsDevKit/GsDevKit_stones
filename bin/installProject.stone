#!/usr/bin/env superdoit_stone
options
{
SuperDoitOptionalOptionWithRequiredArg long: 'projectsHome' default: '$ROWAN_PROJECTS_HOME'.
SuperDoitOptionalOptionWithNoArg long: 'strict'.
}
%
usage
-----
USAGE
      $basename [--help | -h] [--debug | -D] <spec-url> [<component-name>...] [--projectsHome=<projects-directory>]

DESCRIPTION
  Install the project associated with the given <spec-url> into the stone.

****************************
Work around for (v3) during project load, existing required project is "forcibly" 
  reloaded AND cloned in different repository ... not expected 
  (https://github.com/GemTalk/Rowan/issues/905)
****************************

OPTIONS
  <spec-url>           url referencing the load spec of the project to be loaded.
  <component-name>...  if present, names of components to load. Overrides the 
                       component names in the load spec.
  -h, --help           display usage message
  -D, --debug          bring up topaz debugger in the event of a script error
  --projectsHome=<project-directory>
                       This is the directory where the project will be loaded
                       from. By default, projects are loaded from 
                       $ROWAN_PROJECTS_HOME.
  --strict             load spec will be loaded using #resolveStrict, which forces
                       the checkout branch to match the the branch specified in
                       the revision field of the load spec.

EXAMPLES
  $basename -h
  $basename -h -- -l -I $GEMSTONE/data/.topazini

  $basename file:$ROWAN_PROJECTS_HOME/MyProject/rowan/specs/MyProject.ston \
            --projectsHome=$GS_HOME/shared/repos -- -l -I $GEMSTONE/data/.topazini
  $basename file:$ROWAN_PROJECTS_HOME/MyProject/rowan/specs/MyProject.ston Core \
            --projectsHome=$GS_HOME/shared/repos
  $basename file:$ROWAN_PROJECTS_HOME/MyProject/rowan/specs/MyProject.ston \
            --projectsHome=$GS_HOME/shared/repos

  $basename file:$GS_HOME/shared/repos/RowanSample9/specs/spec_0082.ston \
            --strict --projectsHome=$GS_HOME/shared/repos
-----
%
method
rowanV2Install
	| spec args |
	args := self positionalArgs.
	args size < 1
		ifTrue: [
			self usage. 
			self error: 'missing positional <spec-url> argument', ' (', self basename, ')' ].
	spec := (RwSpecification fromUrl: args removeFirst)
		projectsHome: self projectsHome;
		yourself.
	args size > 0
		ifTrue: [ spec componentNames: args ].
	self strict
		ifTrue: [ spec resolveStrict ].
	spec resolve load.
	^ System commit
%
method
rowanV3Install
	| spec args loadSpecs |
	args := self positionalArgs.
	args size < 1
		ifTrue: [
			self usage. 
			self error: 'missing positional <spec-url> argument', ' (', self basename, ')' ].
	System 
		gemEnvironmentVariable: 'ROWAN_PROJECTS_HOME' 
		put: self projectsHome.
	spec := (RwSpecification fromUrl: args removeFirst)
		projectsHome: self projectsHome;
		yourself.
	args size > 0
		ifTrue: [ spec componentNames: args ].
	loadSpecs := self strict
		ifTrue: [ spec resolveStrict ]
		ifFalse: [ spec resolve ].
	loadSpecs do: [:loadSpec |
		"workaround for https://github.com/GemTalk/Rowan/issues/905"
		(Rowan projectNamed: loadSpec projectName ifAbsent: [])
			ifNotNil: [ :theSpec |
				"project is already loaded, reuse projectsHome, so the same git repo is used during reload"
				loadSpec projectsHome: theSpec projectsHome ] ].
	loadSpecs load.
	^ System commit
%
doit
	(Rowan respondsTo: #version)
		ifTrue: [
			Rowan version >= '3.0.0' asRwSemanticVersionNumber
				ifTrue: [ ^ self rowanV3Install ] ].
	^ self rowanV2Install
%
