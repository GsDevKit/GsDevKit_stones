#!/usr/bin/env superdoit_solo
options
{
}
%
usage
-----
USAGE $basename [--help | -h] [--debug | -D]  [--debugGem]

DESCRIPTION
  Generate GsDevKit git project specs for GsDevKit. The resulting dictionary
  is used to generate the default GsDevKit_home project sets.

OPTIONS
  -h, --help        display usage message
  -D, --debug       bring up topaz debugger in the event of a script error
  --debugGem        If terminal is connected to stdout, bring up debugger. If not,
                    dump stack to stdout and wait for topaz to attach using topaz
                    DEBUGGEM command.

EXAMPLES
  $basename --help
  $basename -D
  $basename --debugGem

  $basename > defaultGsDevKitProjectSets.ston

-----
%
method
server
	^ self createDictionaryStructureFrom:
	{
		{ 
			'filetree' .
			{
				'origin' -> { 'github.com' .  'dalehenrich' .  }
			} .
			'gemstone2.4' .
		}.
		{ 
			'ston' .
			{
				'origin' -> { 'github.com' .  'GsDevKit' .  }
			} .
			'gemstone' .
		}.
		{ 
			'Grease' .
			{
				'origin' -> { 'github.com' .  'GsDevKit' .   } 
			}.
			'master' .
		}.
		{
			'PharoCompatibility' . 
			{
				'origin' -> { 'github.com' .  'glassdb' .   }
			} .
			'master' .
		}.
		{ 
			'metacello-work' .
			{
				'origin' -> { 'github.com' .  'dalehenrich' .   } 
			}.
			'master' .
		}.
		{ 
			'tode' .
			{
				'origin' -> { 'github.com' .  'dalehenrich' .   } 
			}.
			'master' .
		}.
		{ 
			'glass' .
			{
				'origin' -> { 'github.com' .  'glassdb' .   } 
			}.
			'master' .
		}.
		{ 
			'rb' . 
			{
				'origin' -> { 'github.com' .  'dalehenrich' .  } 
			}.
			'dev' .
		}.
		{ 
			'zinc' .
			{
				'origin' -> { 'github.com' .  'GsDevKit' .    } 
			} .
			'gs_master' .
		}.
		{
			'zodiac' . 
			{
				'origin' -> { 'github.com' .  'GsDevKit' .   } 
			} .
			'gs_master' .
		}.
	}
%
method
clientServer
	^ self createDictionaryStructureFrom:
	{
		{ 
			'metacello-work' .
			{
				'origin' -> {'github.com' . 'dalehenrich'  } 
			}.
			'master' .
		}.
		{
			'tode' . 
			{
				'origin' -> {'github.com' .  'dalehenrich' .    } 
			}.
			'master' .
		}.
		{ 
			'ston' .
			{
				'origin' -> {'github.com' .  'GsDevKit' .   } 
			}.
			'gemstone' .
		}.
	}
%
method
createDictionaryStructureFrom: array
	| dict |
	dict := Dictionary new.
	array do: [:gitAr |
		| projectName specDict |
		projectName := gitAr at: 1.
		specDict := Dictionary new.
		(gitAr at: 2)
			do: [:assoc |
				specDict add: assoc ].
		dict 
			at: projectName 
			put: 
				(Dictionary new
					at: 'gitUrls' put: specDict;
					at: 'revision' put: (gitAr at: 3); 
					yourself) ].
	^ dict
%
doit
	| dict |
	dict := Dictionary new.
	dict 
		at: 'type' put: 'gitUrlSpec';
		at: 'server' put: self server;
		at: 'clientServer' put: self clientServer;
		yourself.
	^ dict
%
